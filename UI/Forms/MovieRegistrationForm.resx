<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="UploadScreenlistButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABH9JREFUeF7t
        2l+IbVMcwPGZMcOd/LmkeBLKA0n5kzxcknRLkX8RpfvgT5TrgTci/8JNioREeSIvyBMiypPyP4XwQJF0
        kfyN/P9+z/zWWLNnzTlnZvbZ+5xj/+ozZ2bv31prr985+5y915mZLrrooosuJjgWFxdnZmdnT8Ax8PfY
        8z+Iubk5J3wKPsLbON4CaOojm/yH+Ce8iekvwhqTz4twHKazCAMmn0xnEWJCgyafTNfpMOQzXzUdRdjg
        5JPJLsImJ5+8hckrQk2TT8pFiA374XRciitweQMc52Lsizia/6LmySerTwd+OQRP4heUGo3SFzgMSwcT
        MaLJJys/IvnxMP5CKXnUVhVgxJNPlovgYF/FxjasKMDCwoLHcxo+Rim/Tt47nOyAf2cbm1Z9BezJ75fg
        Tty+httwL75FqU99hrtQap/cgR0WoNRBU4rvAf3CXBwM7wBLfepl7IVotTo81TStBXgFWxCt+kTWqOo3
        vISn8PQIPINHcBDiaAaHuWikALtxdOTMjVBvUsNG5DdWgKMQmeMRHg+6AqDdArgdCzgJV+MqHIs9EFn1
        h32j3QK4DQ5wI76B+V5PfImdpMzzuJRcc9gvxqIA5+MnVNtZkFMR2fWG/aL1U8B378cir2RXXNNHen1h
        n2i9AJ77Xh+U2ukhk3jsJa83bAdPo96tct5P/O21Q3sFiGf3psir+hNXIrLXH7bFGbgPi3lfsa/dArgN
        h+M1VNs9D1+ikb2+sB2OgCs4P8JCxN4xKYARr4Ij8QA82NdxNw5FLyce/bFl6c/+B+R+uDr1BNJxPIu9
        ked4atwKL6Vdz8g9imvhadpr0zdIyied61sAw33wc39/bGUTt1dLEfu0DY/jxLStFLHdvq7H70jH8TPO
        QS+v9sgGqhpYgLXCNvEK8ePwA9jfe9jWuwUtBPt0FtJ1Re4FbEVk1xjZIFUbKoD5Mfnt+AR5n5632yN1
        Odgmx7JIeX7yK1xAjRY1RjZI1WZeAWfiU5T6dbXmbBhp8gfAW+RSfvIcVnwi1BLZAFUbKQDps+fhc5T6
        TLxk9hn1fPC89w3tD5RyE99o6z8NsgGq1lsArw4vgpMr9Vf1NS6DhfgutvVjAfyEiOFqimyAqqEK4H44
        +R2wTamvtXyPYdssvwLgqeCXKzfAT42cN2gWdbi7UpJKg2lgAdwHB/JbntK7d51cxk4FOBDvo5SnF+EK
        cxxpn8gaVfUtgNvhxcZODPMS3qzxKYDb4ADX4QeU2tftHbRfAP+Ga+6eb6X1gFFpvwD+Dt+AbkHTX6a+
        i/YKEI/78OhXTl6ZldqMUnsFEOEd2D3wCxPX//xGuSkej6eAN13tFAAOei4uxAUNc0zvLXq3uGjnPWAc
        wuNBYwVwwSMyxyM8HjRSABciHsTN8F1/nLjy5BNUOm7VUoBJ1hUAXQEQs+wTJPm5XupkkrmSPNz3kyS9
        Go2mhStL16y1+LoqSHbZ+g2kK65J5p3p/ehdMg8V8/PzFsEvM1zU8F/Hdk0oV4f8H8P6F0676KKLLqYz
        Zmb+BVBmJuer1AgsAAAAAElFTkSuQmCC
</value>
  </data>
</root>